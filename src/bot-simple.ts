import { Client, LocalAuth } from 'whatsapp-web.js';
import qrcode from 'qrcode-terminal';
import dotenv from 'dotenv';

dotenv.config();

// Configuration simple sans Puppeteer complexe
const client = new Client({
  authStrategy: new LocalAuth({
    dataPath: process.env.WHATSAPP_SESSION_PATH || './sessions'
  }),
  puppeteer: {
    headless: false, // Mode visible pour debug
    args: [
      '--no-sandbox',
      '--disable-setuid-sandbox'
    ]
  }
});

// √âv√©nements du client
client.on('qr', (qr) => {
  console.log('üì± Scannez ce QR code avec WhatsApp:');
  qrcode.generate(qr, { small: true });
  console.log('\nüîó Ou copiez ce lien dans votre navigateur:');
  console.log(`https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(qr)}`);
});

client.on('ready', () => {
  console.log('‚úÖ Bot WhatsApp PestAlert connect√©!');
  console.log('ü§ñ Le bot est maintenant actif et pr√™t √† recevoir des messages.');
});

client.on('authenticated', () => {
  console.log('üîê Authentification r√©ussie!');
});

client.on('auth_failure', (msg) => {
  console.error('‚ùå √âchec de l\'authentification:', msg);
  console.log('üí° Essayez de supprimer le dossier sessions et relancer le bot.');
});

client.on('disconnected', (reason) => {
  console.log('üìµ Client d√©connect√©:', reason);
  console.log('üîÑ Tentative de reconnexion...');
});

// Gestion des messages simplifi√©e
client.on('message', async (message) => {
  try {
    const contact = await message.getContact();
    console.log(`üì© Message de ${contact.name || contact.number}: ${message.body}`);
    
    // Commandes de base
    if (message.body === '!ping') {
      await message.reply('ü§ñ Pong! Bot PestAlert actif.');
    }
    
    if (message.body === '!help') {
      const helpText = `üåæ *PestAlert Bot*

Commandes disponibles:
‚Ä¢ !ping - Test de connexion
‚Ä¢ !help - Afficher cette aide
‚Ä¢ !status - √âtat du bot

Envoyez une photo de vos cultures pour analyse.`;
      await message.reply(helpText);
    }
    
    if (message.body === '!status') {
      await message.reply('‚úÖ Bot op√©rationnel\nüïí ' + new Date().toLocaleString('fr-FR'));
    }
    
    // Gestion des photos
    if (message.hasMedia) {
      await message.reply('üì∑ Photo re√ßue! Analyse en cours...');
      // Simulation d'analyse
      setTimeout(async () => {
        await message.reply('üåæ Analyse termin√©e: Aucun parasite d√©tect√©. Cultures en bonne sant√©! üëç');
      }, 2000);
    }
    
  } catch (error) {
    console.error('Erreur:', error);
    await message.reply('‚ùå Erreur temporaire. Veuillez r√©essayer.');
  }
});

// D√©marrage du bot
console.log('üöÄ D√©marrage du bot WhatsApp PestAlert (version simple)...');
console.log('‚è≥ Initialisation en cours...');

client.initialize().catch(error => {
  console.error('‚ùå Erreur lors de l\'initialisation:', error);
  console.log('\nüí° Solutions possibles:');
  console.log('1. Installer Google Chrome');
  console.log('2. Supprimer le dossier sessions');
  console.log('3. Red√©marrer le bot');
});
